{
    /*
    ! VsCode
    */
    "editor.autoIndent": "full",
    "editor.wrappingIndent": "indent",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
        "source.fixAll": true,
        "source.organizeImports": true
    },
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "modificationsIfAvailable",
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true,
        "**/node_modules": false
    },
    /*
    ! Langugages
    */
    "json.schemas": [],
    "json.format.enable": true,
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.detectIndentation": false,
        "editor.tabSize": 4,
        "editor.insertSpaces": true
    },
    "vsintellicode.typescript.completionsEnabled": true,
    "js/ts.implicitProjectConfig.checkJs": false,
    "js/ts.implicitProjectConfig.experimentalDecorators": false,
    "js/ts.implicitProjectConfig.strictFunctionTypes": true,
    "js/ts.implicitProjectConfig.strictNullChecks": true,
    "javascript.format.enable": true,
    "javascript.validate.enable": true,
    "javascript.preferences.quoteStyle": "double",
    "javascript.updateImportsOnFileMove.enabled": "always",
    "javascript.format.insertSpaceAfterCommaDelimiter": true,
    "javascript.format.insertSpaceAfterConstructor": true,
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
    "javascript.format.insertSpaceAfterSemicolonInForStatements": true,
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
    "javascript.format.insertSpaceBeforeFunctionParenthesis": false,
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,
    "javascript.format.placeOpenBraceOnNewLineForFunctions": false,
    "javascript.format.semicolons": "insert",
    "javascript.commonjs.resolve.extensions": [".js", ".jsx", ".ts", ".tsx"],
    "javascript.commonjs.resolve.package": "package.json",
    "javascript.commonjs.resolve.languages": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
    ],
    "javascript.commonjs.resolve.moduleDirectory": ["node_modules", "**/node_modules"],
    "typescript.validate.enable": true,
    "typescript.format.enable": true,
    "typescript.preferences.quoteStyle": "double",
    "typescript.disableAutomaticTypeAcquisition": true,
    "typescript.check.npmIsInstalled": true,
    "typescript.autoClosingTags": true,
    "typescript.format.insertSpaceAfterCommaDelimiter": true,
    "typescript.format.insertSpaceAfterConstructor": true,
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
    "typescript.format.insertSpaceAfterSemicolonInForStatements": true,
    "typescript.format.insertSpaceAfterTypeAssertion": true,
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
    "typescript.format.insertSpaceBeforeFunctionParenthesis": false,
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,
    "typescript.format.placeOpenBraceOnNewLineForFunctions": false,
    "typescript.format.semicolons": "insert",
    "typescript.updateImportsOnFileMove.enabled": "always",
    /*
    ! Extensions
    */
    "docthis.includeDateTag": false,
    "docthis.includeDescriptionTag": true,
    "docthis.inferTypesFromNames": true,
    "docthis.inlineOneLiners": true,
    "docthis.includeTypes": true,
    "eslint.format.enable": true,
    "eslint.lintTask.enable": false,
    "eslint.alwaysShowStatus": false,
    "eslint.run": "onType",
    "eslint.codeActionsOnSave.mode": "all",
    "eslint.onIgnoredFiles": "off",
    "eslint.migration.2_x": "on",
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "vue",
        "vue-html"
    ],
    "eslint.probe": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "vue",
        "vue-html"
    ],
    "koverage.lowCoverageThreshold": 50,
    "koverage.sufficientCoverageThreshold": 75,
    "koverage.coverageFilePaths": ["coverage"],
    "koverage.coverageFileNames": ["lcov.info", "cov.xml", "coverage.xml", "jacoco.xml"],
    "coverage-gutters.showGutterCoverage": true,
    "coverage-gutters.showRulerCoverage": true,
    "coverage-gutters.showLineCoverage": false,
    "coverage-gutters.coverageBaseDir": "coverage",
    "coverage-gutters.coverageFileNames": [
        "lcov.info",
        "cov.xml",
        "coverage.xml",
        "jacoco.xml"
    ],
    "jestRunIt.environmentVariables": "NODE_ENV=test",
    "jestRunIt.jestCLIOptions": ["--coverage", "--verbose", "--forceExit"],
    "jestRunIt.jestPath": "node_modules/.bin/jest",
    "jestRunIt.testMatchPatterns": [
        "**/*.{spec,test}.{js,ts,jsx,tsx}",
        "**/__test__/*.{js,ts,jsx,tsx}"
    ],
    "jestRunIt.jestConfigPath": "jest.config.js",
    "jestRunIt.updateSnapshotsLabel": "Update snapshot üëç",
    "jestRunIt.runTestLabel": "Run üèÉ‚Äç‚ôÇÔ∏è",
    "jestRunIt.debugTestLabel": "Debug üêû"
}
